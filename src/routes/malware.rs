use crate::db::DbMethods;
use crate::db::{models::malware::Malware, mongo::MongoDb};
use rocket::FromForm;
use rocket::{get, http::Status, serde::json::Json, State};

#[derive(Debug, FromForm)]
pub struct MalwareQuery {
    pub mid: Option<String>,
    pub desc: Option<String>,
}

#[get("/malware?<query..>")]
pub async fn get_malware(
    db: &State<MongoDb>,
    query: MalwareQuery,
) -> Result<Json<Vec<Malware>>, Status> {
    let malware = db
        .get_malware(query)
        .await
        .map_err(|_| Status::InternalServerError)?;
    Ok(Json(malware))
}
